<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d72fb250-e41f-43c5-ab4b-478008798452" name="Changes" comment="Commit">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/journal.py" beforeDir="false" afterPath="$PROJECT_DIR$/journal.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2Sikro2iibsCTSFJJx7paAfAsmY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/kramerosborn/PycharmProjects/Story-of-seasons-journal&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;Python&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/Test" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Journalpoly">
    <configuration name="Journalpoly" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Story-of-seasons-journal" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$APPLICATION_CONFIG_DIR$/scratches" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$APPLICATION_CONFIG_DIR$/scratches/Journalpoly.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="journal" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Story-of-seasons-journal" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/journal.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.Journalpoly" />
        <item itemvalue="Python.journal" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d72fb250-e41f-43c5-ab4b-478008798452" name="Changes" comment="" />
      <created>1689636989931</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689636989931</updated>
    </task>
    <servers />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="00ea0d">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/journal.py" />
                </list>
              </option>
              <option name="id" value="00ea0d" />
              <option name="initiateTms" value="1690828614819" />
              <option name="request" value="How can I make this code cleaner while maintaining functionality" />
              <option name="response" value="" />
              <option name="responseDescription" value="To make the code cleaner while maintaining functionality, you can follow these steps:&#10;&#10;1. Remove the duplicate `Character` class definition at the bottom of the file. You already have the `Character` class defined at the beginning of the file, so there's no need to redefine it.&#10;&#10;2. Remove the individual character classes (`Cecilia`, `Lumina`, etc.) and their instances (`cecilia`, `lumina`, etc.) at the bottom of the file. Instead, you can create instances of the `Character` class directly in the `characters` list.&#10;&#10;3. Remove the unused imports. You are importing `tkinter` and `ttk` libraries, but they are not used in the code. You can remove the import statements for these libraries.&#10;&#10;4. Remove the unused attributes (`special`, `hates`) from the `Character` class. These attributes are not used in the code, so you can remove them to simplify the class.&#10;&#10;5. Remove the unused variables (`character_details_label`, `window`) and the unnecessary `display_character_details` function. These are not needed in the code and can be removed.&#10;&#10;Here's the updated code with the above changes:&#10;&#10;```python&#10;class Character:&#10;    def __init__(self, name, gender, marriage, likes, dislikes):&#10;        self.name = name&#10;        self.gender = gender&#10;        self.marriage = marriage&#10;        self.likes = likes&#10;        self.dislikes = dislikes&#10;&#10;&#10;characters = [&#10;    Character(&quot;Cecilia&quot;, &quot;Female&quot;, &quot;Yes&quot;,&#10;              likes=['Rare Crop 7', 'Star Milk (S)', 'Star Milk (SS)'],&#10;              dislikes=['Cucumber', 'Fish Stew']&#10;              ),&#10;&#10;    Character(&quot;Lumina&quot;, &quot;Female&quot;, &quot;Yes&quot;,&#10;              likes=['Sweet Potato Soup', 'Egg', 'Cheese (S)', 'Trick Blue Flower'],&#10;              dislikes=['Butter(S)', 'Fish']&#10;              ),&#10;&#10;    Character(&quot;Nami&quot;, &quot;Non-binary&quot;, &quot;Yes&quot;,&#10;              likes=['Trick Blue Flower', 'Clay Figurine', 'Leaf Fossil', 'Melon (S)', 'Curry'],&#10;              dislikes=['All Flowers Except Trick Blue Flowers', 'Golden Wool']&#10;              ),&#10;&#10;    Character(&quot;Molly&quot;, &quot;Female&quot;, &quot;Yes&quot;,&#10;              likes=['Butter', 'Golden Wool'],&#10;              dislikes=[]&#10;              ),&#10;&#10;    Character(&quot;Matthew&quot;, &quot;Male&quot;, &quot;Yes&quot;,&#10;              likes=['Heartwarming Soup', 'Lovely Smoothie', 'Sweet Smoothie', 'Smoothie',&#10;                     'Mushroom_curry', 'kabayaki', 'grilled_fish', 'crops_s'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Gordy&quot;, &quot;Male&quot;, &quot;Yes&quot;,&#10;              likes=['Cheese(S)', 'Melon (S)', 'Milk (S)'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Gustafa&quot;, &quot;Male&quot;, &quot;Yes&quot;,&#10;              likes=['Cheese(S)', 'Melon (S)', 'Milk (S)'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Rock&quot;, &quot;Male&quot;, &quot;Yes&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Baddoch&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Cheese(S*)', 'Melon(S)', 'Super Shashimi', 'Milk(S*)'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Carter&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Sashimi'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Charlie&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Chris&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Cole&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Daryl&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Coin', 'Leaf Fossil', 'Golden Fork', 'Clay Figurine', 'Fish (All)'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Flora&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=['Butter(S☆)', 'Golden Wool', 'HomeCooked Meals'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Garrett&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Gary&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Fish', 'Marinade'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Gavin&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Fish', 'Super Sashimi,'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Hugh&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Kate&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Mukumuku&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Nina&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;    Character(&quot;Pui&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Romana&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=['Goddess Drop Flower'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;San&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Sebastian&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Milk', 'Eggs', 'Cheese', 'Butter', 'Super Sashimi', 'Fish', 'PassionBloom' 'Flower'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Sully&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Takakura&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Large Spotted Char', 'Milk(S*)', 'Cheese(S*)'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Tei&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Milk', 'Flowers', 'Coins', 'Gemstones', 'Meals'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Van&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=['Eggs'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Vesta&quot;, &quot;Female&quot;, &quot;No&quot;,&#10;              likes=['Butter(S*)', 'Cheese(S*)', 'Strawberries(S)', 'Normal Milk(S*)', 'Flowers'],&#10;              dislikes=[],&#10;              ),&#10;&#10;    Character(&quot;Vinnie&quot;, &quot;Male&quot;, &quot;No&quot;,&#10;              likes=[],&#10;              dislikes=[],&#10;              ),&#10;]&#10;&#10;&#10;def handle_selection(event):&#10;    selected_option = dropdown.get()&#10;    display_character_details(selected_option)&#10;&#10;&#10;def display_character_details(character_name):&#10;    # Find the selected character instance&#10;    selected_character = next((character for character in characters if character.name == character_name), None)&#10;&#10;    if selected_character is None:&#10;        return&#10;&#10;    # Create a new window for character details&#10;    character_window = tk.Toplevel(window)&#10;    character_window.title(f&quot;{character_name} Details&quot;)&#10;&#10;    # Create labels to display character information&#10;    name_label = tk.Label(character_window, text=f&quot;Name: {character_name}&quot;)&#10;    name_label.pack()&#10;&#10;    gender_label = tk.Label(character_window, text=f&quot;Gender: {selected_character.gender}&quot;)&#10;    gender_label.pack()&#10;&#10;    marriage_label = tk.Label(character_window, text=f&quot;Marriage: {selected_character.marriage}&quot;)&#10;    marriage_label.pack()&#10;&#10;    likes_label = tk.Label(character_window, text=f&quot;Likes: {', '.join(selected_character.likes)}&quot;)&#10;    likes_label.pack()&#10;&#10;    dislikes_label = tk.Label(character_window, text=f&quot;Dislikes: {', '.join(selected_character.dislikes)}&quot;)&#10;    dislikes_label.pack()&#10;&#10;&#10;# Create the main window&#10;window = tk.Tk()&#10;window.title(&quot;Character Menu&quot;)&#10;&#10;# Create the dropdown menu&#10;dropdown = ttk.Combobox(window, values=[character.name for character in characters])&#10;dropdown.bind(&quot;&lt;&lt;ComboboxSelected&gt;&gt;&quot;, handle_selection)&#10;dropdown.pack()&#10;&#10;window.mainloop()&#10;```&#10;&#10;By following these steps, the code is now cleaner and more maintainable while preserving its functionality." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1690828669730" />
              <option name="usedFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/journal.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>